[{"content":"You can follow the following template + example to update your modules to make it drupal 10 compatible:\nTemplate: your-module-name.libraries.yml\n1 2 3 4 5 6 7 8 drupal.form: js: js/your-library-file.js: {} dependencies: - some-origina/dependency + - core/drupal + - core/jquery + - core/once your-library-file.js\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 - (function ($, window, Drupal, drupalSettings) { + (function ($, window, Drupal, drupalSettings, once) { ... Drupal.behaviors.myfeature = { attach(context) { - const elements = once(\u0026#39;myfeature\u0026#39;, \u0026#39;[data-myfeature]\u0026#39;, context); + const $elements = $(once(\u0026#39;myfeature\u0026#39;, \u0026#39;[data-myfeature]\u0026#39;, context)); .... - elements.forEach(processingCallback); + $elements.each(processingCallback); } }; function processingCallback(index, value) {} ... - })(jQuery, this, Drupal, drupalSettings); + })(jQuery, this, Drupal, drupalSettings, once); Example bootstrap.libraries.yml\n1 2 3 4 5 6 7 8 drupal.form: js: js/misc/form.js: {} dependencies: - bootstrap/theme + - core/drupal + - core/jquery + - core/once form.js\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 - (function ($, window, Drupal, drupalSettings) { + (function ($, window, Drupal, drupalSettings, once) { Drupal.behaviors.bootstrapForm = { attach: function (context) { if (drupalSettings.bootstrap \u0026amp;\u0026amp; drupalSettings.bootstrap.forms_has_error_value_toggle) { - var $context = $(context); - $context.find(\u0026#39;.form-item.has-error:not(.form-type-password.has-feedback)\u0026#39;).once(\u0026#39;error\u0026#39;).each(function () { - const $elements = $(once(\u0026#39;myfeature\u0026#39;, \u0026#39;[data-myfeature]\u0026#39;, context)); - var $formItem = $(this); - var $input = $formItem.find(\u0026#39;:input\u0026#39;); - $input.on(\u0026#39;keyup focus blur\u0026#39;, function () { - if (this.defaultValue !== void 0) { - $formItem[this.defaultValue !== this.value ? \u0026#39;removeClass\u0026#39; : \u0026#39;addClass\u0026#39;](\u0026#39;has-error\u0026#39;); - $input[this.defaultValue !== this.value ? \u0026#39;removeClass\u0026#39; : \u0026#39;addClass\u0026#39;](\u0026#39;error\u0026#39;); - } - }); - }); + const $elements = $(once(\u0026#39;.form-item.has-error:not(.form-type-password.has-feedback)\u0026#39;, \u0026#39;error\u0026#39;, context)); + $elements.each(function () { + const $elements = $(once(\u0026#39;myfeature\u0026#39;, \u0026#39;[data-myfeature]\u0026#39;, context)); + var $formItem = $(this); + var $input = $formItem.find(\u0026#39;:input\u0026#39;); + $input.on(\u0026#39;keyup focus blur\u0026#39;, function () { + if (this.defaultValue !== void 0) { + $formItem[this.defaultValue !== this.value ? \u0026#39;removeClass\u0026#39; : \u0026#39;addClass\u0026#39;](\u0026#39;has-error\u0026#39;); + $input[this.defaultValue !== this.value ? \u0026#39;removeClass\u0026#39; : \u0026#39;addClass\u0026#39;](\u0026#39;error\u0026#39;); + } + }); + }); } } }; - })(jQuery, this, Drupal, drupalSettings); + })(jQuery, this, Drupal, drupalSettings, once); Reference:\nhttps://www.drupal.org/node/3158256 ","permalink":"https://blog.simon-hu.org/posts/2023.10.24-deprecation-jquery.once/","summary":"Fixing custom modules\u0026rsquo; code that are dependent of jquery.once which is changing its api in newest drupal 10, hence making it compatible for the upgrade.","title":"Deprecation of \"jquery.once\" api"},{"content":"Handle for deprecated function drupal_get_path()\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # Node - drupal_get_path(\u0026#39;module\u0026#39;, \u0026#39;node\u0026#39;) + \\Drupal::service(\u0026#39;extension.list.module\u0026#39;)-\u0026gt;getPath(\u0026#39;node\u0026#39;) # Node (Alternative) - drupal_get_path(\u0026#39;module\u0026#39;, \u0026#39;node\u0026#39;) + \\Drupal::service(\u0026#39;extension.path.resolver\u0026#39;)-\u0026gt;getPath(\u0026#39;module\u0026#39;, \u0026#39;node\u0026#39;) # Theme - drupal_get_path(\u0026#39;theme\u0026#39;, \u0026#39;seven\u0026#39;) + \\Drupal::service(\u0026#39;extension.list.theme\u0026#39;)-\u0026gt;getPath(\u0026#39;seven\u0026#39;) # Standard - drupal_get_path(\u0026#39;profile\u0026#39;, \u0026#39;standard\u0026#39;) + \\Drupal::service(\u0026#39;extension.list.profile\u0026#39;)-\u0026gt;getPath(\u0026#39;standard\u0026#39;) Handle for deprecated function drupal_get_filename()\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # Node - drupal_get_filename(\u0026#39;module\u0026#39;, \u0026#39;node\u0026#39;) + \\Drupal::service(\u0026#39;extension.list.module\u0026#39;)-\u0026gt;getPathname(\u0026#39;node\u0026#39;) # Node (alternative) - drupal_get_filename(\u0026#39;module\u0026#39;, \u0026#39;node\u0026#39;) + \\Drupal::service(\u0026#39;extension.path.resolver\u0026#39;)-\u0026gt;getPathname(\u0026#39;module\u0026#39;, \u0026#39;node\u0026#39;) # Theme - drupal_get_filename(\u0026#39;theme\u0026#39;, \u0026#39;seven\u0026#39;) + \\Drupal::service(\u0026#39;extension.list.theme\u0026#39;)-\u0026gt;getPathname(\u0026#39;seven\u0026#39;) # Standard - drupal_get_filename(\u0026#39;profile\u0026#39;, \u0026#39;standard\u0026#39;) + \\Drupal::service(\u0026#39;extension.list.profile\u0026#39;)-\u0026gt;getPathname(\u0026#39;standard\u0026#39;) Reference Material:\nhttps://www.drupal.org/node/2940438 ","permalink":"https://blog.simon-hu.org/posts/2023.10.31-deprecation-drupal_get_path-drupal_get_filename/","summary":"Fixing custom modules\u0026rsquo; code that are dependent of function drupal_get_path() and drupal_get_filename() which is deprecating in newest drupal 10, hence making it compatible for the upgrade (only for temporal purpose).","title":"Deprecation of \"path/filename\" api"},{"content":"Handle for deprecated function “file_create_url() and “file_url_transform_relative()\n1 2 3 4 5 6 7 8 9 10 11 - file_create_url($uri) + \\Drupal::service(\u0026#39;file_url_generator\u0026#39;)-\u0026gt;generateAbsoluteString($uri) - file_url_transform_relative($file_url) + \\Drupal::service(\u0026#39;file_url_generator\u0026#39;)-\u0026gt;transformRelative($file_url) - file_url_transform_relative(file_create_url($uri) + \\Drupal::service(\u0026#39;file_url_generator\u0026#39;)-\u0026gt;generateString($uri) - Drupal\\Core\\Url::fromUri(file_create_url($uri)) + \\Drupal::service(\u0026#39;file_url_generator\u0026#39;)-\u0026gt;generate($uri) Reference Material:\nhttps://www.drupal.org/node/2940031 ","permalink":"https://blog.simon-hu.org/posts/2023.10.31-deprecation-file_create_url-and-file_url_transform_relative/","summary":"Fixing custom modules\u0026rsquo; code that are dependent of function file_create_url() and file_url_transform_relative() which is deprecating in newest drupal 10, hence making it compatible for the upgrade (only for temporal purpose).","title":"Deprecation of \"url\" api"},{"content":" PSR-1: Basic Coding Standard PSR-2: Coding Style Guide PSR-4: Autoloading Standard Reference:\nhttps://reintech.io/blog/php-and-psr-standards-writing-clean-and-compatible-php-code ","permalink":"https://blog.simon-hu.org/posts/2023.10.31-drupal-custom-module-psr4-standards/","summary":"[Drupal Custom Module] PHP PSR Standards","title":"Drupal custom module (PSR4) standard"},{"content":"During the course of the upgrade, it is found that after the upgrade drupal 10 consistently fails to recognize bootstrap theme, resulting in a site with plain html and css, this post will help you resolve this issue.\nStep-1: Install using composer\nTo begin with you will need to install the theme using composer, this will place your theme inside the $drupal-root/theme/contrib folder, for instance run composer require 'drupal/bootstrap:^3.29' will download the drupal bootstrap 3.29 theme and place it in folder $drupal-root/theme/contrib/bootstrap.\nStep-2: Remove original theme\nThen you will need to remove the original folder located at the $drupal-root/theme for this instance, the original bootstrap base theme is located at $drupal-root/theme/bootstrap, you will need to remove it.\nStep-3: Clear Cache\nLastly, we will need to let drupal correctly identify the location of the new composer installed theme, simply clear the cache using the admin panel or run drush cr in terminal.\n","permalink":"https://blog.simon-hu.org/posts/2023.10.31-fixing-theme-not-getting-recognised/","summary":"Quick fix to the issue of theme not getting recognized after upgrading from drupal-9 to drupal-10","title":"Fixing bootstrap theme not getting recognized"},{"content":"(This one is very similar to where I fix the issue of theme not getting recognized, so if you have checked that one out, the procedure is the same, you will just have to uninstall the manually installed module, and use composer to install module instead)\nDuring the course of the upgrade, it is found that after the upgrade drupal 10 consistently fails to recognize bootstrap theme, resulting in a site with plain html and css, this post will help you resolve this issue.\nStep-1: Install using composer\nTo begin with you will need to install the module using composer, this will place your module inside the $drupal-root/module/contrib folder, for instance run composer require 'drupal/XXXX:^3.29' will download the drupal bootstrap 3.29 module and place it in folder $drupal-root/module/contrib/XXXX.\nStep-2: Remove original module\nThen you will need to remove the original folder located at the $drupal-root/module for this instance, the original bootstrap base module is located at $drupal-root/module/XXXX, you will need to remove it.\nStep-3: Clear Cache\nLastly, we will need to let drupal correctly identify the location of the new composer installed module, simply clear the cache using the admin panel or run drush cr in terminal.\n","permalink":"https://blog.simon-hu.org/posts/2023.11.01-fixing-module-not-getting-recognised/","summary":"Quick fix to the issue of module not getting recognized after upgrading from drupal-9 to drupal-10","title":"Fixing module not getting recognized"},{"content":" ","permalink":"https://blog.simon-hu.org/resume/","summary":" ","title":"Resume"},{"content":"This tutorial provides step-by-step instructions to address the strange problem where, upon accessing a website, the index.php file begins to download instead of opening as intended. Users may encounter a dialog box prompting them to download the file, unsure of how to proceed when faced with options to open, close, or cancel. This article aims to guide you in resolving this issue effectively.\nSolution 1: Rebooting your web development environment Sometimes it will be a easy fix like rebooting your development environment / software, for my instance I am using MAMP, and by stopping the server and opening it again, solved 99% of my issues\nSolution 2: Move MIME type \u0026ldquo;application/x-httpd-php\u0026rdquo; to highest priority In file MimeTypes.php, move the application/x-httpd-php to the very bottom of the page, this will ensure your php handler is put on the highest priority.\nThe purpose of the MIME type \u0026ldquo;application/x-httpd-php\u0026rdquo; is to indicate that a file being served by a web server is a PHP script. MIME types are used to identify the nature and format of a file so that the browser or other client software can handle it appropriately. In the case of \u0026ldquo;application/x-httpd-php,\u0026rdquo; it tells the browser that the file should be processed by the server as a PHP script rather than being displayed directly to the user. This MIME type is crucial in ensuring that the PHP script is executed correctly on the server side before the resulting HTML or other output is sent to the browser for rendering.\nThis is proposed by “franck22” at drupal community post: https://www.drupal.org/forum/support/post-installation/2004-05-14/indexphp-starts-to-download-instead-of-opening\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 - ---------------------------before changes - ... - private const MAP = [ - .... - .... - \u0026#39;application/x-httpd-php\u0026#39; =\u0026gt; [\u0026#39;php\u0026#39;], - .... - .... - ] - ... - + ---------------------------after changes + ... + private const MAP = [ + .... + .... + .... + .... + \u0026#39;application/x-httpd-php\u0026#39; =\u0026gt; [\u0026#39;php\u0026#39;], + ] + ... ","permalink":"https://blog.simon-hu.org/posts/2023.10.27-downloads-file-instead-of-opening-it/","summary":"This tutorial provides step-by-step instructions to address the strange problem where, upon accessing a website, the index.php file begins to download instead of opening as intended. Users may encounter a dialog box prompting them to download the file, unsure of how to proceed when faced with options to open, close, or cancel. This article aims to guide you in resolving this issue effectively.\nSolution 1: Rebooting your web development environment Sometimes it will be a easy fix like rebooting your development environment / software, for my instance I am using MAMP, and by stopping the server and opening it again, solved 99% of my issues","title":"Websites downloads the PHP-File instead of opening the website"}]